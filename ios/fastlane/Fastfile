default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # register_devices(devices_file: "./devices.txt")

    #if ENV["APP_IDENTIFIER"] === "app.real.mobile.development"
    #  add_badge
    #end

    setup_ci
    
    sync_code_signing(  
      type: "appstore",
      readonly: is_ci
    )
    
    match(
      app_identifier: ENV["APP_IDENTIFIER"],
      type: ENV["MATCH_TYPE"],
      readonly: true,
      git_basic_authorization: ENV["GIT_PRIVATE_KEY"],
    )

    # get_push_certificate(
    #  app_identifier: ENV["APP_IDENTIFIER"],
    #  save_private_key: true
    #)

    settings_to_override = {
      :BUNDLE_IDENTIFIER => ENV["APP_IDENTIFIER"],
      :PROVISIONING_PROFILE_SPECIFIER => ENV["APP_IDENTIFIER"],
      :DEVELOPMENT_TEAM => ENV["TEAM_ID"]
    }
    
    update_app_identifier(
      xcodeproj: "REAL.xcodeproj",
      plist_path: "REAL/Info.plist",
      app_identifier: ENV["APP_IDENTIFIER"]
    )

    increment_build_number(xcodeproj: "REAL.xcodeproj")

    disable_automatic_code_signing(code_sign_identity: 'iPhone Distribution')
    sync_code_signing
    update_project_provisioning(profile: 'app.real.mobile.development')
    
    build_app(
      export_xcargs: "-allowProvisioningUpdates",
      xcargs: settings_to_override,
      workspace: "REAL.xcworkspace",
      scheme: ENV["APP_SCHEME"],
      export_method: "app-store",
      output_directory: "../build",
      output_name: "REAL.development.ipa",
      export_options: {
        provisioningProfiles: {
          "app.real.mobile" => "match AppStore app.real.mobile",
          "app.real.mobile.development" => "match AppStore app.real.mobile.development",
          "app.real.mobile.staging" => "match AppStore app.real.mobile.staging",
        }
      }
    )

    sh 'git checkout -- ../REAL/Images.xcassets'

    upload_to_testflight
  end
end
